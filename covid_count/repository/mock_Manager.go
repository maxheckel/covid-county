// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

// Autogenerated from `make mockery` do not edit manually

package repository

import mock "github.com/stretchr/testify/mock"

// MockManager is an autogenerated mock type for the Manager type
type MockManager struct {
	mock.Mock
}

// Cases provides a mock function with given fields:
func (_m *MockManager) Cases() Cases {
	ret := _m.Called()

	var r0 Cases
	if rf, ok := ret.Get(0).(func() Cases); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Cases)
		}
	}

	return r0
}

// DeathRecords provides a mock function with given fields:
func (_m *MockManager) DeathRecords() DeathRecord {
	ret := _m.Called()

	var r0 DeathRecord
	if rf, ok := ret.Get(0).(func() DeathRecord); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(DeathRecord)
		}
	}

	return r0
}

// IsUpdating provides a mock function with given fields:
func (_m *MockManager) IsUpdating() IsUpdating {
	ret := _m.Called()

	var r0 IsUpdating
	if rf, ok := ret.Get(0).(func() IsUpdating); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(IsUpdating)
		}
	}

	return r0
}

// Record provides a mock function with given fields:
func (_m *MockManager) Record() Record {
	ret := _m.Called()

	var r0 Record
	if rf, ok := ret.Get(0).(func() Record); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Record)
		}
	}

	return r0
}
